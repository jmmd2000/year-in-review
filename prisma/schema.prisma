// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")

    // Do not use foreign keys (PlanetScale does not support them)
    relationMode = "prisma"
}

model User {
  id               Int           @id @default(autoincrement())
  google_id        String        @unique
  first_name       String?
  last_name        String?
  avatar_url       String
  created_at       DateTime      @default(now())
  updated_at       DateTime      @updatedAt
  emotions         Emotion[]
  events           Event[]
  days             Day[]
  months           Month[]
  years            Year[]
}

model Emotion {
  id                    Int           @id @default(autoincrement())
  userID                String
  user                  User          @relation(fields: [userID], references: [google_id])
  emotion_name          String
  emotion_colour        String
  count_in_month        Int           @default(0)
  count_in_year         Int           @default(0)
  last_used             DateTime?
  days_since_last_used  Int           @default(0)
  created_at            DateTime      @default(now())
  days                  Day[]  @relation("DayToEmotions")
  primaryEmotionDays    Day[]  @relation("PrimaryEmotion")
  months                Month[]

  @@index([userID])
}

model Event {
  id                    Int           @id @default(autoincrement())
  userID                String
  user                  User          @relation(fields: [userID], references: [google_id])
  event_name            String
  event_colour          String
  count_in_month        Int           @default(0)
  count_in_year         Int           @default(0)
  last_used             DateTime?
  days_since_last_used  Int           @default(0)
  created_at            DateTime      @default(now())
  days                  Day[]
  months                Month[]

  @@index([userID])
}

model Day {
    id                    Int           @id @default(autoincrement())
    userID                String
    user                  User          @relation(fields: [userID], references: [google_id])
    day_name              String
    day_number            Int
    date                  DateTime
    emotions              Emotion[]     @relation("DayToEmotions")
    primaryEmotionID      Int
    primaryEmotion        Emotion?      @relation("PrimaryEmotion", fields: [primaryEmotionID], references: [id])
    events                Event[]
    created_at            DateTime      @default(now())
    monthID               Int
    month                 Month         @relation(fields: [monthID], references: [id], map: "Day_Month_fkey")
    yearID                Int
    year                  Year          @relation(fields: [yearID], references: [id], map: "Day_Year_fkey")
    comments              String?
  
    
    @@index([userID])
    @@index([yearID])
    @@index([monthID])
    @@index([primaryEmotionID])
}

model Month {
    id                    Int           @id @default(autoincrement())
    userID                String
    user                  User          @relation(fields: [userID], references: [google_id])
    month_name            String
    yearID                Int
    year                  Year          @relation(fields: [yearID], references: [id])
    days                  Day[]
    sorted_emotions       Emotion[] // Emotions sorted by count
    sorted_events         Event[]   // Events sorted by count
    created_at            DateTime      @default(now())
    
    @@index([userID])
    @@index([yearID])
}

model Year {
    id                    Int           @id @default(autoincrement())
    userID                String
    user                  User          @relation(fields: [userID], references: [google_id])
    year_name             String
    months                Month[]
    days                  Day[]
    created_at            DateTime      @default(now())
    
    @@index([userID])
}